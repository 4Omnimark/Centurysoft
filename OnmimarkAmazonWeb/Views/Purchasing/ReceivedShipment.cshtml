@model OmnimarkAmazon.Models.ReceivedShipment

<style>
    .editor-label { font-weight:bold; }
</style>

<h2>Received a Shipment</h2>

<link rel="stylesheet" href="http://code.jquery.com/ui/1.9.1/themes/base/jquery-ui.css" />

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script src="http://code.jquery.com/jquery-1.8.2.js"></script>
<script src="http://code.jquery.com/ui/1.9.1/jquery-ui.js"></script>

@Html.Partial("VendorSelection")

<script type="text/javascript">

    $(function () {
        @{
            int x = 0;

            foreach (var rp in ViewBag.ReceivedProducts)
            {
                <text>
                $("#ReceivedProductSearch@(x)").autocomplete({
                    source: "/AmazonInventory/ProductLookup",
                    select: function (event, ui) {
                        $("#ReceivedProductSearch@(x)").val(ui.item.label);
                        $("#ProductID@(x)").val(ui.item.value);
                        return false;
                    },
                    change: function (event, ui) {
                        if (ui.item == null) {
                            $("#ReceivedProductSearch@(x)").val('');
                            $("#ProductID@(x)").val('');
                            $("#ReceivedProductQty@(x)").val('');
                            $("#TrackingNumber@(x)").val('');
                        }
                    }
                });
                </text>
                
                x++;
            }
        }
    });

    function VendorSelected()
    {
    }

</script>

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)
    <fieldset>
        <legend>Received Shipment</legend>

        <div style="float:left;">
            <div class="editor-label">
                @Html.LabelFor(model => model.Date)
            </div>
            <div class="editor-field">
                @Html.TextBox("Date", ((DateTime)Model.Date).ToString("M/d/yyyy"))
                @Html.ValidationMessageFor(model => model.Date)
            </div>
        </div>
        <div class="editor-field">
            @Html.DropDownList("Status", (SelectList)ViewBag.ReceivedStatus)
            @Html.ValidationMessageFor(model => model.ID)
        </div>
        <div style="float:left; padding-left:20px;">
            <div class="editor-label">
                Vendor
            </div>
            <div class="editor-field">
                <input type="text" name="VendorSearch" id="VendorSearch" value="@(IsPost ? Request.Form["VendorSearch"] : Model.Vendor == null ? "" : Model.Vendor.Name)" />
                @Html.TextBoxFor(model => model.VendorID, new { type = "hidden" })
                @Html.ValidationMessageFor(model => model.VendorID)
            </div>
        </div>

        <p style="float:left; padding-left:60px; margin-top:32px;">
            <input type="submit" value="@ViewBag.ButtonText" @if (ViewBag.ActionType == Startbutton.Web._BaseController.ActionType.Delete) { <text>@Html.Raw("onclick=\"return confirm('This will delete the entire shipment! If you wish to delete only one product, just clear the Product field in the list below.  Do you wish to delete this entire shipment and all received products listed?');\""); </text> } />
        </p>

        <div style="clear:both;"></div>

        <hr style="margin-top:20px; margin-bottom:20px; color:Black;" />

        <table>
        <tr>
            <th>Product</th>
            <th>Qty</th>
            <th>Tracking Number</th>
        </tr>
        @{
            x = 0;

            foreach (var rp in ViewBag.ReceivedProducts)
            {
                if (ViewBag.ActionType == Startbutton.Web._BaseController.ActionType.Edit)
                {
                    <input type="hidden" name="ReceivedProductID@(x)" id="ReceivedProductID@(x)" value="@(IsPost ? Request.Form["ReceivedProductID" + x.ToString()] : rp.ID)" />
                }
            
                <tr>
                    <td>
                        @Html.ValidationMessage("ReceivedProductSearch" + x.ToString())
                        <input name='ReceivedProductSearch@(x)' id='ReceivedProductSearch@(x)' value='@(IsPost ? Request.Form["ReceivedProductSearch" + x.ToString()] : (rp.Product == null ? "" : rp.Product.Name))' style='width:500px;' />
                        <input type='hidden' name='ProductID@(x)' id='ProductID@(x)' value='@(IsPost ? Request.Form["ProductID" + x.ToString()] : (rp.ProductID == null ? "" : rp.ProductID))' />
                    </td>
                    <td>
                        <input name='ReceivedProductQty@(x)' id='ReceivedProductQty@(x)' value='@(IsPost ? Request.Form["ReceivedProductQty" + x.ToString()] : (rp.Qty == 0 ? "" : ((decimal)rp.Qty).ToString("#####0.####")))' style='width:50px; text-align:right;' />
                        @Html.ValidationMessage("ReceivedProductQty" + x.ToString())
                    </td>
                    <td>
                        <input name='TrackingNumber@(x)' id='TrackingNumber@(x)' value='@(IsPost ? Request.Form["TrackingNumber" + x.ToString()] : rp.TrackingNumber)' style='width:200px;' />
                        @Html.ValidationMessage("TrackingNumber" + x.ToString())
                    </td>
                </tr>

                x++;

            }

        }
        </table>

    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Received")
</div>
